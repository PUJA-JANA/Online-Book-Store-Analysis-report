create database online_book_store;
use online_book_store;
select * from books;
select * from customers;
select * from orders;

-- Lavel-1 Question
-- Q1. Retrieve all books in the "Fiction" genre?
select * from books
where Genre = 'Fiction';

-- Q2. Find books published after the year 1950?
select * from books
where Published_Year > '1950';

-- Q3. List all customers from the Canada?
select * from customers
where Country = 'Canada';

-- Q4. Show orders placed in November 2023?
select * from orders
where Order_Date between '2023-11-01' and '2023-11-30';

-- Q5. Best-Selling Author?  
SELECT b.Author, SUM(o.Quantity) AS Total_Sales  
FROM Orders o  
JOIN Books b ON o.Book_ID = b.Book_ID  
GROUP BY b.Author  
ORDER BY Total_Sales DESC  
LIMIT 1;

-- Q6. Which book has generated the highest total revenue?
select distinct b.Title, sum(o.Total_Amount) as total_revenue
from books as b
join orders as o
on b.Book_ID = o.Book_ID
group by b.Title
order by total_revenue desc
limit 1;

-- Q7. Show all customers who ordered more than 1 quantity of a book?
select c.Customer_ID, c.Name
from customers as c
left join orders as o
on c.Customer_ID = o.Customer_ID
where o.Quantity > 1;

-- Q8. Which genre contributes the most to overall sales?
SELECT Genre, SUM(Quantity) AS Total_Sold  
FROM Orders o  
JOIN Books b ON o.Book_ID = b.Book_ID  
GROUP BY Genre  
ORDER BY Total_Sold DESC;

-- Q9. List all genres available in the Books table?
select distinct Genre from books;

-- Q10. Find the book with the lowest stock?
select * from books
order by Stock asc
limit 1;

-- Q11. Calculate the total revenue generated from all orders?
select round(sum(Total_Amount),2) as total_revenue
from orders;

-- Q12. Retrieve the total number of books sold for each genre?
select b.Genre, sum(o.Quantity) as total_books
from books as b
join orders as o
on b.Book_ID = o.Book_ID
group by b.Genre
;
-- Q13. Find the average price of books in the "Fantasy" genre?
select Genre, Avg(Price) as avg_price
from books
where Genre = 'Fantasy';

-- Q14. List customers who have placed at least 2 orders?
Select Customer_ID, count(Order_ID) as order_count
from orders
group by Customer_ID
having count(Order_ID) > 1;

-- List customers who have placed at least 2 orders?
select c.Customer_ID, c.Name, count(o.Order_ID) as order_count
from customers as c
join orders as o
on c.Customer_ID = o.Customer_ID
group by c.Customer_ID, c.Name
having count(o.Order_ID) > 1;

-- Q15. Find the most frequently ordered book?
select o.Book_ID, b.Title, count(o.Order_ID) as order_book
from orders as o
join books as b
on b.Book_ID = o.Book_ID
group by o.Book_ID, b.title
order by order_book desc
limit 1;

-- Q16. Show the top 3 most expensive books of 'Fantasy' Genre?
select Book_ID, Title, Price
from books
where Genre = 'Fantasy'
order by Price desc
limit 3;
-- OR
select *,
row_number() over (order by Price desc) as rn
from books
limit 3;

-- Q17. Retrieve the total quantity of books sold by each author?
Select b.Author, Sum(o.Quantity) as total_quantity
from orders as o
join books as b
on b.Book_ID = o.Book_ID
group by b.Author
order by total_quantity desc;

-- Q18. List the cities where customers who spent over $30 are located?
select distinct c.City, o.Total_Amount
from customers as c
join orders as o
on o.Customer_ID = c.Customer_ID
where o.Total_Amount > 30;

-- Q19. Find the customer who spent the most on orders?
select c.Customer_ID, c.Name, sum(o.Total_Amount) as total_spent
from customers as c
join orders as o
on o.Customer_ID = c.Customer_ID
group by c.Customer_ID, c.Name
order by total_spent desc;

-- Q20. Calculate the stock remaining after fulfilling all orders?
select b.Book_ID, b.Title, b.Stock, coalesce(sum(o.Quantity),0) as order_quantity, 
	   b.Stock - coalesce(sum(o.Quantity),0) as remaining_quantity
from books as b
left join orders as o
on b.Book_ID = o.Book_ID
group by b.Book_ID,  b.Title, b.Stock
order by b.Book_ID desc
;
-- Sales & Revenue Analysis
-- Q21. What is the total revenue generated by the online book store?
select sum(total_amount) as total_revenue
from orders
;
-- Q22. What is the average order value in the store?
select round(avg(Total_Amount),3) as avg_order_value
from orders
;
-- Q23. What is the trend of monthly revenue over time?
SELECT DATE_FORMAT(Order_Date, '%Y-%m') AS Month, SUM(Total_Amount) AS Revenue  
FROM Orders  
GROUP BY Month  
ORDER BY Month
;
-- Q24. What is the trend of Yearly revenue over time?
select year(Order_Date) as year, sum(Total_Amount) as total_revenue
from orders
group by year 
order by total_revenue desc
;
-- 25. Effect of Published Year on Sales  
SELECT b.Published_Year, SUM(o.Quantity) AS Total_Sold  
FROM Orders o  
JOIN Books b ON o.Book_ID = b.Book_ID  
GROUP BY b.Published_Year  
ORDER BY b.Published_Year
;
-- Order & Transaction Analysis
-- 26. What is the highest quantity of books purchased in a single order?
select max(Quantity) as highest_quantity
from orders
;
-- 27. What percentage of orders contain more than one book?
SELECT (COUNT
         (CASE WHEN Quantity > 1 THEN 1 END) * 100.0 / COUNT(*)) 
         AS Percentage  
FROM Orders
;
-- 28. Which day of the week has the highest number of orders?
select dayname(Order_Date) as dayname, count(*) as order_count
from orders
group by dayname
order by order_count desc
;
-- 29. What is the most common order size (in terms of quantity)?
select Quantity, count(*) as frequancy
from orders
group by Quantity
order by frequancy desc
limit 1
;
-- 30. How many unique books have been sold in total?
select count(distinct Book_ID) as unique_book_sold
from orders
;
-- Bonus (Advanced Analysis)
-- 31. What are the seasonal trends in book sales?
select monthname(Order_Date) as Month_name, round(sum(Total_Amount),2) as Monthly_sales
from orders
group by Month_name 
order by Monthly_sales desc
;
-- 32. How do different genres perform in different months?
select month(o.Order_Date) as month,
       b.Genre, sum(o.Total_Amount) as Total_sales
from orders as o
join books as b
on o.Book_ID = b.Book_ID
group by month, Genre
order by month, Total_sales
;
-- 33. What is the average time gap between repeat purchases by a customer?
With Order_gaps as(
					select Customer_ID, Order_Date,
                    LAG(Order_Date) over(partition by Customer_ID order by Order_Date) as Prev_order_date
                    from orders
				)
 select avg(Order_Date - Prev_order_date) as avg_order_between_days
 from Order_gaps
 where Prev_order_date is not null
 ;










